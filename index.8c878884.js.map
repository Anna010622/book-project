{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header.js","src/js/mobile-menu.js","src/js/dark-theme.js","src/js/local-storage.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","src/js/foundations.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/charitable-foundations-array.js","node_modules/@parcel/runtime-js/lib/runtime-c7d7300005ac5244.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7e7dc92581dd8dd6.js","node_modules/@parcel/runtime-js/lib/runtime-7971a8b1e1cb1250.js","node_modules/@parcel/runtime-js/lib/runtime-9002a8420579ea7b.js","node_modules/@parcel/runtime-js/lib/runtime-643deeb424fadd15.js","node_modules/@parcel/runtime-js/lib/runtime-17ffd1104b1ad1bc.js","node_modules/@parcel/runtime-js/lib/runtime-6e03b90a655cd7bb.js","node_modules/@parcel/runtime-js/lib/runtime-797082be7b33ee50.js","node_modules/@parcel/runtime-js/lib/runtime-7b6cb595089d3bde.js","node_modules/@parcel/runtime-js/lib/runtime-cf2136453adc12b9.js","node_modules/@parcel/runtime-js/lib/runtime-d930834c56014c62.js","node_modules/@parcel/runtime-js/lib/runtime-72f1202546830ec6.js","node_modules/@parcel/runtime-js/lib/runtime-8f6dd09180e79ffb.js","node_modules/@parcel/runtime-js/lib/runtime-bff42e7440da3826.js","node_modules/@parcel/runtime-js/lib/runtime-7da0de2f93f4b4af.js","node_modules/@parcel/runtime-js/lib/runtime-8ffa3b890964a737.js","node_modules/@parcel/runtime-js/lib/runtime-ab8d7475235e107d.js","node_modules/@parcel/runtime-js/lib/runtime-4d3095b5a4ad04c0.js","node_modules/@parcel/runtime-js/lib/runtime-3cd49d704593ad5e.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","const linksEl = document.querySelectorAll('.header__nav-link');\n\nlinksEl.forEach(link => {\n  if (\n    window.location.pathname === '/' ||\n    window.location.pathname === '/book-project/'\n  ) {\n    return;\n  }\n  if (window.location.pathname === link.getAttribute('href')) {\n    link.classList.add('current-link');\n  } else {\n    link.classList.remove('current-link');\n  }\n});\n","const mobileMenu = document.querySelector('.js-menu-container');\nconst openMenuBtn = document.querySelector('.js-open-menu');\nconst bodyEl = document.querySelector('body');\n\nopenMenuBtn.addEventListener('click', toggleMenu);\nfunction toggleMenu() {\n  mobileMenu.classList.toggle('is-open');\n  bodyEl.classList.toggle('noScroll');\n}\n\nconst linksEl = document.querySelectorAll('.mobile__nav-link');\n\nlinksEl.forEach(link => {\n  if (\n    window.location.pathname === '/' ||\n    window.location.pathname === '/book-project/'\n  ) {\n    return;\n  }\n  if (window.location.pathname === link.getAttribute('href')) {\n    link.classList.add('current-link');\n  } else {\n    link.classList.remove('current-link');\n  }\n});\n","import {\n  saveToStorage,\n  loadFromStorage,\n  removeFromStorage,\n} from './local-storage';\n\nconst themeSwitcherEl = document.querySelector('.theme-switcher__checkbox');\nconst bodyEl = document.querySelector('body');\n\nconst currentTheme = loadFromStorage('darkTheme');\nthemeSwitcherEl.checked = currentTheme;\n\nthemeSwitcherEl.addEventListener('change', onChangeCheckbox);\n\nfunction onChangeCheckbox() {\n  if (themeSwitcherEl.checked) {\n    bodyEl.classList.add('dark');\n    saveToStorage('darkTheme', 'true');\n  } else {\n    bodyEl.classList.remove('dark');\n    removeFromStorage('darkTheme');\n  }\n}\nonChangeCheckbox();\n","export function saveToStorage(key, value) {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nexport function loadFromStorage(key) {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n}\n\nexport function removeFromStorage(key) {\n  localStorage.removeItem(key);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import Swiper, { Navigation } from 'swiper';\nimport 'swiper/swiper-bundle.min.css';\n\nimport { charitableFoundations } from './charitable-foundations-array';\n\nconst foundationListEl = document.querySelector('.foundations__list');\n\nshowFoundations();\n\nfunction showFoundations() {\n  const markup = charitableFoundations\n    .map((foundation, index) => {\n      const number = index + 1 <= 9 ? `0${index + 1}` : index + 1;\n      return makeFoundationsMarkup(foundation, number);\n    })\n    .join(' ');\n\n  foundationListEl.innerHTML = markup;\n}\n\nfunction makeFoundationsMarkup({ url, img, img2, title }, number) {\n  return `\n    <li class=\"foundations__item swiper-slide\">\n        <span class=\"foundation__number\">${number}</span>\n        <a\n          class=\"foundations__link\"\n          href=\"${url}\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n          aria-label=\"link to the foundation ${title}\"\n        >\n          <img\n            class=\"foundations__logo\"\n            srcset=\"${img} 1x, ${img2} 2x\"\n            src=\"${img}\"\n            alt=\"logo of the foundation ${title}\"\n            loading=\"lazy\"\n          />\n        </a>\n    </li>\n  `;\n}\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  modules: [Navigation],\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n  spaceBetween: 20,\n\n  slidesPerView: 4,\n  breakpoints: {\n    768: {\n      slidesPerView: 6,\n    },\n  },\n\n  rewind: true,\n});\n","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import saveTheChildren1x from '../images/foundations/img1_@1x.png';\nimport saveTheChildren2x from '../images/foundations/img1_@2x.png';\nimport projectHope1x from '../images/foundations/img2_@1x.png';\nimport projectHope2x from '../images/foundations/img2_@2x.png';\nimport united1x from '../images/foundations/img3_@1x.png';\nimport united2x from '../images/foundations/img3_@2x.png';\nimport internationalMedicalCorps1x from '../images/foundations/img4_@1x.png';\nimport internationalMedicalCorps2x from '../images/foundations/img4_@2x.png';\nimport msf1x from '../images/foundations/img5_@1x.png';\nimport msf2x from '../images/foundations/img5_@2x.png';\nimport razomForUkraine1x from '../images/foundations/img6_@1x.png';\nimport razomForUkraine2x from '../images/foundations/img6_@2x.png';\nimport actionAgainstHunger1x from '../images/foundations/img7_@1x.png';\nimport actionAgainstHunger2x from '../images/foundations/img7_@2x.png';\nimport worldVision1x from '../images/foundations/img8_@1x.png';\nimport worldVision2x from '../images/foundations/img8_@2x.png';\nimport prytulaFoundation1x from '../images/foundations/img9_@1x.png';\nimport prytulaFoundation2x from '../images/foundations/img9_@2x.png';\n\nexport const charitableFoundations = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: saveTheChildren1x,\n    img2: saveTheChildren2x,\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: projectHope1x,\n    img2: projectHope2x,\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: united1x,\n    img2: united2x,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: internationalMedicalCorps1x,\n    img2: internationalMedicalCorps2x,\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: msf1x,\n    img2: msf2x,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: razomForUkraine1x,\n    img2: razomForUkraine2x,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: actionAgainstHunger1x,\n    img2: actionAgainstHunger2x,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: worldVision1x,\n    img2: worldVision2x,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: prytulaFoundation1x,\n    img2: prytulaFoundation2x,\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"9h3Xx\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"epEvu\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"6QFJy\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"4eqim\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"lJOxg\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"evsq7\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"4mrNE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"az9KW\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"dMDKK\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"9dnPG\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"5WVC6\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"egKLt\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"iZfyM\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"crLn4\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"7wYjt\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"bMfc0\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"b4jQE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"ilkS2\");","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cIs3N\\\":\\\"index.8c878884.js\\\",\\\"5UbS1\\\":\\\"index.90d502ee.css\\\",\\\"9h3Xx\\\":\\\"img1_@1x.944ccd9c.png\\\",\\\"epEvu\\\":\\\"img1_@2x.c0360025.png\\\",\\\"6QFJy\\\":\\\"img2_@1x.3c6218f7.png\\\",\\\"4eqim\\\":\\\"img2_@2x.edefb6e1.png\\\",\\\"lJOxg\\\":\\\"img3_@1x.4c1c8691.png\\\",\\\"evsq7\\\":\\\"img3_@2x.37107713.png\\\",\\\"4mrNE\\\":\\\"img4_@1x.866b54b7.png\\\",\\\"az9KW\\\":\\\"img4_@2x.43c84f90.png\\\",\\\"dMDKK\\\":\\\"img5_@1x.5f6ec2bf.png\\\",\\\"9dnPG\\\":\\\"img5_@2x.b8684781.png\\\",\\\"5WVC6\\\":\\\"img6_@1x.a52e8612.png\\\",\\\"egKLt\\\":\\\"img6_@2x.57b9cad1.png\\\",\\\"iZfyM\\\":\\\"img7_@1x.a9a8920b.png\\\",\\\"crLn4\\\":\\\"img7_@2x.1a9656e9.png\\\",\\\"7wYjt\\\":\\\"img8_@1x.9f6c865b.png\\\",\\\"bMfc0\\\":\\\"img8_@2x.030e98f4.png\\\",\\\"b4jQE\\\":\\\"img9_@1x.a0719334.png\\\",\\\"ilkS2\\\":\\\"img9_@2x.2a4aef91.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","document","querySelectorAll","forEach","link","window","location","pathname","getAttribute","classList","add","remove","$910e0db584f0bbf3$var$mobileMenu","querySelector","$910e0db584f0bbf3$var$openMenuBtn","$910e0db584f0bbf3$var$bodyEl","addEventListener","toggle","$4LMMA","parcelRequire","$2381388f86a3d3bd$var$themeSwitcherEl","$2381388f86a3d3bd$var$bodyEl","$2381388f86a3d3bd$var$currentTheme","loadFromStorage","$2381388f86a3d3bd$var$onChangeCheckbox","checked","saveToStorage","removeFromStorage","$3791646d3ae2cee8$export$20e5eb467ec2dc0a","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$3791646d3ae2cee8$export$b366658078313913","getItem","undefined","parse","$3791646d3ae2cee8$export$a3e6e3b94afefd97","removeItem","defineProperty","module","exports","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","Array","isArray","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","call","slice","constructor","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","markup","$9WMMt","$7500a55abca3c3a3$var$foundationListEl","$6u1yK","charitableFoundations","map","foundation","index","param","number","url","img","img2","title","concat","$7500a55abca3c3a3$var$makeFoundationsMarkup","join","innerHTML","$2pSj8","direction","modules","navigation","nextEl","spaceBetween","slidesPerView","breakpoints","rewind","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","update","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","_key","_modules","el","params","ref","$1EjTE","extend","$58sFY","getDocument","swipers","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","$parcel$interopDefault","$8nrFW","__modules__","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","slideNext","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$73df5eb817a37a3a$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","_navigation","onPrevClick","onNextClick","$kYZkc","initButton","destroy","destroyButton","_s","pagination","clickable","isHidden","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","$4f2Yh","$4b86c1168bfafbb0$export$5ad4bef803b1a532","$4tdx6","$2ytht","$aNks1","$hxbKl","$bQyib","$li3TI","$6p7Dh","$4zYo5","$c4ct7","$6vImt","$g3OyI","$a4KSf","$edn7U","$ebgNC","$kHlX5","$hNLp3","$4MetE","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","err","stack","$7dd1ddf6834435ca$var$getBundleURL","register"],"version":3,"file":"index.8c878884.js.map"}